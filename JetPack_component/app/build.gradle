apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.jetpack_component"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
}


dependencies {
    def version_ktx = "2.0.0"
    def version_android = "1.0.0"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$version_android"
    implementation "androidx.exifinterface:exifinterface:$version_android"
    implementation 'com.google.android.material:material:1.1.0-alpha08'
    implementation "androidx.legacy:legacy-support-v4:$version_android"
    implementation "com.google.android.material:material:$version_android"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    /*
     * Step 1: Add the paging library
     */
    implementation "androidx.paging:paging-runtime:$version_ktx"

    /*
     * Step 2: Adding ViewModel and Lifecycle
     */
    implementation "androidx.lifecycle:lifecycle-extensions:$version_ktx"


    /*
     * Step 3: Adding rxJava to the app
     */
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    /*
     * Step 4: Adding retrofit to the app
     */
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'


    /*
     * Step 5: We would be needing an image loading library.
     * So we are going to use Picasso
     */
    implementation 'com.squareup.picasso:picasso:2.71828'

/*
*  for navigation jetpack component
*/

    implementation "androidx.navigation:navigation-fragment-ktx:$version_ktx"
    implementation "androidx.navigation:navigation-ui-ktx:$version_ktx"

//  work manager dependency
    implementation "androidx.work:work-runtime-ktx:$version_ktx"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
